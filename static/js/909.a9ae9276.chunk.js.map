{"version":3,"file":"static/js/909.a9ae9276.chunk.js","mappings":"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","sources":["routes/ProductDetail.js"],"sourcesContent":["import { useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { useEffect, useState, useContext, memo } from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { flushSync } from \"react-dom\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addItem } from \"./../store.js\";\r\n\r\nimport { Context1 } from \"./../App.js\";\r\n\r\nlet YellowBtn = styled.button`\r\n  background: ${(props) => props.bg};\r\n  color: ${(props) => (props.bg == \"blue\" ? \"white\" : \"black\")};\r\n  padding: 10px;\r\n`;\r\n\r\n// let NewBtn = styled.button(YellowBtn)`\r\n//   color: red\r\n// `;\r\n\r\n// let Box = styled.div`\r\n//   background: grey;\r\n//   padding: 20px;\r\n// `;\r\n\r\nfunction ProductDetail(props) {\r\n  let dispatch = useDispatch();\r\n\r\n  let [count, setCount] = useState(0);\r\n  let [timer, setTimer] = useState(true);\r\n  let [validation, setValidataion] = useState(true);\r\n  let [tab, setTab] = useState(0);\r\n  let [fade2, setFade2] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    flushSync(() => {\r\n      // 성능저하 우려\r\n      setFade2(\"end\");\r\n    });\r\n    return () => {\r\n      setFade2(\"\");\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\r\n      \"mount, update 시 실행 / html 렌더링 후 동작 / 어려운 연산, 서버에서 데이터 가져오는 작업 / 타이머 장착\"\r\n    );\r\n    let a = setTimeout(() => {\r\n      setTimer(false);\r\n    }, 2000);\r\n    if (isNaN(count)) {\r\n      setValidataion(false);\r\n    } else {\r\n      setValidataion(true);\r\n    }\r\n    return () => {\r\n      clearTimeout(a);\r\n      console.log(\r\n        \"unmount시 실행됨, useEffect 동작 전에 실행 , clean up function 실행, 기존타이머 제거, 기존 데이터 요청 제거\"\r\n      );\r\n    };\r\n  }, [count]); // 디펜던시, [count, timer] 변수 업데이트 될 떄 실행,   [] 빈값이면 mount 시 1회만 실행\r\n\r\n  let { id } = useParams();\r\n  let prod = props.shoes.find((e) => e.id == id);\r\n  // let imgUrl = \"/img/shoes\" + prod.id + \".jpg\";\r\n  let imgUrl =\r\n    \"https://codingapple1.github.io/shop/shoes\" + (prod.id + 1) + \".jpg\";\r\n\r\n  useEffect(() => {\r\n    let watched = localStorage.getItem(\"watched\");\r\n    watched = JSON.parse(watched);\r\n    watched.push(prod.id);\r\n    watched = new Set(watched);\r\n    watched = Array.from(watched);\r\n    localStorage.setItem(\"watched\", JSON.stringify(watched));\r\n  }, []);\r\n\r\n  return (\r\n    <div className={\"container start \" + fade2}>\r\n      {timer ? <Timer /> : null}\r\n      {count}\r\n      <YellowBtn\r\n        bg=\"yellow\"\r\n        onClick={() => {\r\n          setCount(count + 1);\r\n        }}\r\n      >\r\n        버튼\r\n      </YellowBtn>\r\n      <YellowBtn bg=\"blue\">버튼</YellowBtn>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <img src={imgUrl} width=\"100%\" />\r\n        </div>\r\n        <div>\r\n          {validation ? null : (\r\n            <div className=\"alert alert-warning\">경고: 숫자만 입력 가능</div>\r\n          )}\r\n          <input\r\n            type=\"text\"\r\n            onChange={(e) => {\r\n              setCount(e.target.value);\r\n            }}\r\n          ></input>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <h4 className=\"pt-5\">{prod.title}</h4>\r\n          <p>{prod.content}</p>\r\n          <p>{prod.price}원</p>\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            onClick={() => {\r\n              dispatch(addItem({ id: 3, name: prod.title, count: 1 }));\r\n            }}\r\n          >\r\n            주문하기\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <Nav variant=\"tabs\" defaultActiveKey=\"link0\">\r\n        <Nav.Item>\r\n          <Nav.Link\r\n            onClick={() => {\r\n              setTab(0);\r\n            }}\r\n            eventKey=\"link0\"\r\n          >\r\n            재고\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link\r\n            onClick={() => {\r\n              setTab(1);\r\n            }}\r\n            eventKey=\"link1\"\r\n          >\r\n            상품명\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link\r\n            onClick={() => {\r\n              setTab(2);\r\n            }}\r\n            eventKey=\"link2\"\r\n          >\r\n            내용\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n      </Nav>\r\n\r\n      <TabContent tab={tab} shoes={props.shoes} id={id} />\r\n    </div>\r\n  );\r\n}\r\n\r\n/** Yellow 버튼 누를 떄 마다 TabContent 재랜더링 됨\r\n * 그래서 함수를 memo로 감싸 렌더링 막음\r\n * props가 변할 떄만 재렌더링 해줌\r\n * 그래서 props를 매번 비교하게 됨\r\n * props가 길면 복잡해지니 렌더링이 오래걸리는 꼭 필요한곳에만 쓰기\r\n *\r\n * useMemo는 컴포넌트 로드 시 딱 1회만 실행\r\n * a컴포넌트 선언 하고 부모컴포넌트 안에서 let result = useMemo(()=>{return a()}, [state])  // state가 변화할때만 a 실행\r\n * useEffect는 html 렌더링 후 실행, useMemo는 동시 실행\r\n */\r\nlet TabContent = memo(function ({ tab, shoes, id }) {\r\n  let { stock } = useContext(Context1);\r\n  let [fade, setFade] = useState(\"\");\r\n  useEffect(() => {\r\n    let a = setTimeout(() => setFade(\"end\"), 100); // automatic batching 막으려고 , flushSync() 이것도 가능\r\n    return () => {\r\n      // clean up function\r\n      clearTimeout(a);\r\n      setFade(\"\");\r\n    };\r\n  }, [tab]);\r\n  // if (tab === 0) {\r\n  //   return <div>내용0</div>;\r\n  // }\r\n  // if (tab === 1) {\r\n  //   return <div>내용1</div>;\r\n  // }\r\n  // if (tab === 2) {\r\n  //   return <div>내용2</div>;\r\n  // }\r\n  return (\r\n    <div className={`start ${fade}`}>\r\n      {\r\n        [\r\n          <div>{stock[id]}</div>,\r\n          <div>{shoes[id].title}</div>,\r\n          <div>내용2</div>,\r\n        ][tab]\r\n      }\r\n    </div>\r\n  );\r\n});\r\n\r\nfunction Timer() {\r\n  return <div className=\"alert alert-warning\">2초 내 구매 시 할인</div>;\r\n}\r\n\r\nexport default ProductDetail;\r\n"],"names":["YellowBtn","styled","button","_templateObject","_taggedTemplateLiteral","props","bg","TabContent","memo","_ref","tab","shoes","id","stock","useContext","Context1","fade","setFade","useState","useEffect","a","setTimeout","clearTimeout","_jsx","className","concat","children","title","Timer","dispatch","useDispatch","count","setCount","timer","setTimer","validation","setValidataion","setTab","fade2","setFade2","flushSync","console","log","isNaN","useParams","prod","find","e","imgUrl","watched","localStorage","getItem","JSON","parse","push","Set","Array","from","setItem","stringify","_jsxs","onClick","src","width","type","onChange","target","value","content","price","addItem","name","Nav","variant","defaultActiveKey","Item","Link","eventKey"],"sourceRoot":""}